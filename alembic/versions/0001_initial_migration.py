"""Initial migration

Revision ID: 0001
Revises: 
Create Date: 2024-01-15 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '0001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classifications',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('processing_time_ms', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('location_extracted', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('source_platform', sa.String(length=50), nullable=True),
    sa.Column('source_id', sa.String(length=200), nullable=True),
    sa.Column('source_timestamp', sa.DateTime(), nullable=True),
    sa.Column('urgency_score', sa.Float(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('responded', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_created_category', 'classifications', ['created_at', 'category'], unique=False)
    op.create_index('idx_urgency_responded', 'classifications', ['urgency_score', 'responded'], unique=False)
    op.create_index(op.f('ix_classifications_category'), 'classifications', ['category'], unique=False)
    op.create_index(op.f('ix_classifications_created_at'), 'classifications', ['created_at'], unique=False)

    op.create_table('extracted_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('classification_id', sa.String(), nullable=False),
    sa.Column('emergency_keywords_count', sa.Integer(), nullable=True),
    sa.Column('location_mentions_count', sa.Integer(), nullable=True),
    sa.Column('urgency_indicators_count', sa.Integer(), nullable=True),
    sa.Column('casualty_indicators_count', sa.Integer(), nullable=True),
    sa.Column('infrastructure_keywords_count', sa.Integer(), nullable=True),
    sa.Column('features_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['classification_id'], ['classifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('alerts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('classification_id', sa.String(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('responder_id', sa.String(length=100), nullable=True),
    sa.Column('response_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['classification_id'], ['classifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_alert_status', 'alerts', ['status', 'severity'], unique=False)

    op.create_table('model_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('precision', sa.Float(), nullable=True),
    sa.Column('recall', sa.Float(), nullable=True),
    sa.Column('f1_score', sa.Float(), nullable=True),
    sa.Column('humanitarian_f1', sa.Float(), nullable=True),
    sa.Column('avg_inference_time_ms', sa.Float(), nullable=True),
    sa.Column('total_predictions', sa.Integer(), nullable=True),
    sa.Column('evaluation_date', sa.DateTime(), nullable=True),
    sa.Column('test_set_size', sa.Integer(), nullable=True),
    sa.Column('confusion_matrix_json', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_model_version', 'model_metrics', ['model_name', 'model_version'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_model_version', table_name='model_metrics')
    op.drop_table('model_metrics')
    op.drop_index('idx_alert_status', table_name='alerts')
    op.drop_table('alerts')
    op.drop_table('extracted_features')
    op.drop_index(op.f('ix_classifications_created_at'), table_name='classifications')
    op.drop_index(op.f('ix_classifications_category'), table_name='classifications')
    op.drop_index('idx_urgency_responded', table_name='classifications')
    op.drop_index('idx_created_category', table_name='classifications')
    op.drop_table('classifications')
    # ### end Alembic commands ### 